{"version":3,"sources":["assets/images/logo.png","shared/components/navbar/navbar.jsx","app/layout/layout.jsx","app/home/home.jsx","app/about/about.jsx","app/main-page/main-page.jsx","app/app.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AppNavbar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","menu","path","title","react_default","a","createElement","Navbar","bg","variant","expand","fixed","Container","Brand","href","Toggle","aria-controls","Collapse","id","className","Nav","map","i","Item","anchor_link_default","concat","Component","Layout","fluid","Row","Col","sm","navbar_AppNavbar","props","children","Home","src","logo","alt","About","theme","MainPage","home_Home","about_About","App","isLoading","layout_Layout","react_router_dom","basename","process","react_router","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6RCInBC,cACnB,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACXC,KAAM,CACJ,CAAEC,KAAM,OAAQC,MAAO,QACvB,CAAED,KAAM,QAASC,MAAO,SACxB,CAAED,KAAM,aAAcC,MAAO,cAC7B,CAAED,KAAM,UAAWC,MAAO,WAC1B,CAAED,KAAM,SAAUC,MAAO,YARjBV,wEAcZ,OACEW,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,GAAG,cAAcC,QAAQ,OAAOC,OAAO,KAAKC,MAAM,OACxDP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAOM,MAAR,CAAcC,KAAK,SAAnB,iBACAV,EAAAC,EAAAC,cAACC,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7BZ,EAAAC,EAAAC,cAACC,EAAA,EAAOU,SAAR,CACEC,GAAG,mBACHC,UAAU,uBAEVf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACGxB,KAAKI,MAAMC,KAAKoB,IAAI,SAAAC,GACnB,OACElB,EAAAC,EAAAC,cAACc,EAAA,EAAIG,KAAL,KACEnB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAYc,UAAU,WAAWL,KAAI,IAAAW,OAAMH,EAAEpB,OAC1CoB,EAAEnB,qBA7BcuB,aCAlBC,mLAEjB,OACEvB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAWgB,MAAM,OAAOV,GAAG,aACzBd,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACEzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKZ,GAAG,SAASa,GAAG,MAClB3B,EAAAC,EAAAC,cAAC0B,EAAD,OAEF5B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKZ,GAAG,OAAOa,GAAG,KAAKZ,UAAU,cAC9BvB,KAAKqC,MAAMC,mBATYR,8BCAfS,mLAEjB,OACE/B,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAWgB,MAAM,OAAOV,GAAG,OAAOC,UAAU,YAE1Cf,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAKV,UAAU,qBACbf,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKC,GAAG,IAAIZ,UAAU,2CACpBf,EAAAC,EAAAC,cAAA,OAAK8B,IAAKC,IAAMC,IAAI,WAAWnB,UAAU,UAE3Cf,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKC,GAAG,IAAIZ,UAAU,sCACpBf,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIa,UAAU,QAAd,mBACAf,EAAAC,EAAAC,cAAA,MAAIa,UAAU,OAAd,oBACAf,EAAAC,EAAAC,cAAA,KAAGa,UAAU,QAAb,8PAboBO,aCDba,mLACV,IACCC,EAAU5C,KAAKqC,MAAfO,MACR,OACEpC,EAAAC,EAAAC,cAAA,OAAKa,UAAW,WAAaqB,GAC3BpC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAWO,UAAU,gBAAgBD,GAAG,SACtCd,EAAAC,EAAAC,cAAA,MAAIa,UAAU,mBAAd,SACAf,EAAAC,EAAAC,cAAA,KAAGa,UAAU,cAAb,mQAMAf,EAAAC,EAAAC,cAAA,KAAGa,UAAU,cAAb,4QAbyBO,aCCde,mLAEjB,OACErC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAACqC,EAAD,CAAOH,MAAM,iBALiBd,aCGjBkB,cACnB,SAAAA,IAAc,IAAAnD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgD,IACZnD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkD,GAAA7C,KAAAH,QACKI,MAAQ,CACX6C,WAAW,GAHDpD,wEAQUG,KAAKI,MAAnB6C,UACR,OACEzC,EAAAC,EAAAC,cAACwC,EAAD,KACE1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAQC,SAAUC,IAChB7C,EAAAC,EAAAC,cAAA,OAAKY,GAAG,kBACNd,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAOC,OAAK,EAACjD,KAAK,IAAIkD,UAAWX,IACjCrC,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAOhD,KAAK,QAAQkD,UAAWjB,cAfVT,aCKb2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.43577836.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f8ce2711.png\";","import React, { Component } from \"react\";\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\n\nexport default class AppNavbar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      menu: [\n        { path: \"home\", title: \"Home\" },\n        { path: \"about\", title: \"About\" },\n        { path: \"portofolio\", title: \"Portofolio\" },\n        { path: \"contact\", title: \"Contact\" },\n        { path: \"resume\", title: \"Resume\" }\n      ]\n    };\n  }\n\n  render() {\n    return (\n      <Navbar bg=\"transparent\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\n        <Container>\n          <Navbar.Brand href=\"#home\">Silver Winter</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse\n            id=\"basic-navbar-nav\"\n            className=\"justify-content-end\"\n          >\n            <Nav>\n              {this.state.menu.map(i => {\n                return (\n                  <Nav.Item>\n                    <AnchorLink className=\"nav-link\" href={`#${i.path}`}>\n                      {i.title}\n                    </AnchorLink>\n                  </Nav.Item>\n                );\n              })}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport AppNavbar from \"../../shared/components/navbar/navbar\";\n\nexport default class Layout extends Component {\n  render() {\n    return (\n      <Container fluid=\"true\" id=\"container\">\n        <Row>\n          <Col id=\"navbar\" sm=\"12\">\n            <AppNavbar />\n          </Col>\n          <Col id=\"body\" sm=\"12\" className=\"no-padding\">\n            {this.props.children}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport logo from \"../../assets/images/logo.png\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <Container fluid=\"true\" id=\"home\" className=\"fullpage\">\n        {/* <Container className=\"fullpage\"> */}\n        <Row className=\"fullscreen center\">\n          <Col sm=\"6\" className=\"gradient-right-orange fullscreen center\">\n            <img src={logo} alt=\"devoneru\" className=\"logo\" />\n          </Col>\n          <Col sm=\"6\" className=\"text-left fullscreen center orange\">\n            <div>\n              <h1 className=\"name\">Heru Julyanto E</h1>\n              <h3 className=\"job\">Mobile Developer</h3>\n              <p className=\"desc\">\n                Iâ€™m a Professional Mobile Developer, passionate about design &\n                creative work. Curently Working as a fulltime mobile dev and\n                freelance mobile dev. I read books and comics, play video game,\n                watch movie, and learn Russian in my freetime.\n              </p>\n            </div>\n          </Col>\n        </Row>\n        {/* </Container> */}\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nexport default class About extends Component {\n  render() {\n    const { theme } = this.props;\n    return (\n      <div className={\"section \" + theme}>\n        <Container className=\"fullpage page\" id=\"about\">\n          <h4 className=\"text small bold\">About</h4>\n          <p className=\"text small\">\n            Lorem ipsum dolor, sit amet consectetur adipisicing elit. Vel,\n            veniam nesciunt repellat quaerat architecto temporibus consequatur\n            laudantium porro laboriosam asperiores exercitationem minima sed,\n            consectetur dolorum eligendi quisquam at recusandae itaque!\n          </p>\n          <p className=\"text small\">\n            Lorem ipsum dolor, sit amet consectetur adipisicing elit. Vel,\n            veniam nesciunt repellat quaerat architecto temporibus consequatur\n            laudantium porro laboriosam asperiores exercitationem minima sed,\n            consectetur dolorum eligendi quisquam at recusandae itaque!\n          </p>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Home from \"../home/home\";\nimport About from \"../about/about\";\n\nexport default class MainPage extends Component {\n  render() {\n    return (\n      <div>\n        <Home />\n        <About theme=\"dark\" />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Layout from \"./layout/layout\";\nimport MainPage from \"./main-page/main-page\";\nimport Home from \"./home/home\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false\n    };\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <Layout>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div id=\"router-wrapper\">\n            <Route exact path=\"/\" component={MainPage} />\n            <Route path=\"/home\" component={Home} />\n          </div>\n        </Router>\n      </Layout>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/scss/index.scss\";\nimport App from \"./app/app.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}